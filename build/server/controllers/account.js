// Generated by CoffeeScript 1.10.0
var CozyInstance, Event, WebDAVAccount, async, fs, getTemplateName, log, path;

fs = require('fs');

path = require('path');

async = require('async');

WebDAVAccount = require('../models/webdavaccount');

CozyInstance = require('../models/cozyinstance');

Event = require('../models/event');

log = require('printit')({
  prefix: 'account:controller'
});

getTemplateName = function(locale) {
  var extension, fileName, filePath, runFromBuild;
  filePath = path.resolve(__dirname, '../views/index_en.js');
  runFromBuild = fs.existsSync(filePath);
  extension = runFromBuild ? 'js' : 'jade';
  fileName = "index_" + locale + "." + extension;
  filePath = path.resolve(__dirname, "../views/" + fileName);
  if (!fs.existsSync(filePath)) {
    fileName = "index_en." + extension;
  }
  return fileName;
};

module.exports = {
  index: function(req, res) {
    return async.parallel({
      davAccount: function(done) {
        return WebDAVAccount.first(done);
      },
      calendarTags: function(done) {
        return Event.calendars(done);
      },
      instance: function(done) {
        return CozyInstance.first(done);
      }
    }, function(err, results) {
      var calendarNames, calendarTags, data, davAccount, domain, fileName, instance, locale;
      if (err != null) {
        log.error(err);
      }
      davAccount = results.davAccount, calendarTags = results.calendarTags, instance = results.instance;
      calendarNames = calendarTags.map(function(calendar) {
        return calendar.name;
      });
      locale = (instance != null ? instance.locale : void 0) || 'en';
      domain = (instance != null ? instance.domain : void 0) || '';
      data = {
        login: davAccount != null ? davAccount.login : void 0,
        password: davAccount != null ? davAccount.token : void 0,
        domain: domain,
        calendars: calendarNames
      };
      fileName = getTemplateName(locale);
      return res.render(fileName, data);
    });
  },
  createCredentials: function(req, res) {
    return WebDAVAccount.createAccount(function(err, account) {
      if (err != null) {
        return res.send(500, {
          error: err.toString()
        });
      } else {
        return res.send(201, {
          success: true,
          account: account.toJSON()
        });
      }
    });
  }
};
